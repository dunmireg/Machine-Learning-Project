setwd("./Machine-Learning-Project")
if(!file.exists("testing")) {
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", "testing.csv")
}
if(!file.exists("testing")) {
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", "testing.csv")
}
if(!file.exists("training")) {
download.file("http://d396qusza40orc  .cloudfront.net/predmachlearn/pml-training.csv", "training.csv")
}
if(!file.exists("training")) {
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", "training.csv")
}
file.exists("testing.csv")
if(!file.exists("training.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", "training.csv")
}
training <- read.csv("training.csv")
str(training)
install.packages("psych")
library(psych)
?describe
summary(training)
describe(training)
table(colSums(is.na(training)))
?colSums
?read.csv
rm(list = ls())
training <- read.csv("training.csv", na.strings = c("NA", ""))
colSums(is.na(training))
table(colSums(is.na(training)))
?colSums
cleanTrain <- training[!colSums(is.na(training)) >= 19216]
sum(is.na(cleanTrain))
summary(cleanTrain)
cleanTrain <- cleanTrain[,7:60]
str(cleanTrain)
library(randomForest)
validation <- createDataPartition(y = cleanTrain$classe, p = 0.6, list = FALSE)
library(caret)
crossVal <- createDataPartition(y = cleanTrain$classe, p = 0.6, list = FALSE)
train <- cleanTrain[crossVal,]
test <- cleanTrain[-crossVal,]
?randomForest
modFit <- randomForest(y ~ ., data = train)
modFit <- randomForest(classe ~ ., data = train)
modFit
pred <- predict(modFit, test)
confusionMatrix(pred, test$classe)
if(!file.exists("testing.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", "testing.csv")
testing <- read.csv("testing.csv")
)
testing <- read.csv("testing.csv")
if(!file.exists("testing.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", "testing.csv")
}
testing <- read.csv("testing.csv")
predict(modFit, testing)
