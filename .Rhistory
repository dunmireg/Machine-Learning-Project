setwd("./Machine-Learning-Project")
training <- read.csv("training.csv", na.strings = c("NA", ""))
table(colSums(is.na(training)))
library(randomForest)
cleanTrain <- training[!colSums(is.na(training)) >= 19216]
cleanTrain <- cleanTrain[,8:60]
crossVal <- createDataPartition(y = cleanTrain$classe, p = 0.60, list = FALSE)
train <- cleanTrain[crossVal,]
test <- cleanTrain[-crossVal,]
librar(caret)
library(caret)
crossVal <- createDataPartition(y = cleanTrain$classe, p = 0.60, list = FALSE)
train <- cleanTrain[crossVal,]
test <- cleanTrain[-crossVal,]
modFit <- randomForest(classe ~ ., data = train)
pred <- predict(modFit, test)
pred
modFit
cleanTrain2 <- cleanTrain[-cleanTrain$new_window == "yes",]
cleanTrain$new_window
cleanTrain2 <- read.csv("training.csv", na.strings = c("NA", ""))
cleanTrain2 <- cleanTrain2[!colSums(is.na(training)) >= 19216]
cleanTrain2 <- cleanTrain2[-cleanTrain2$new_window == "yes",]
cleanTrain2 <- cleanTrain2[!cleanTrain2$new_window == "yes",]
100-0.62
rm(list = ls())
training <- read.csv("training.csv", na.strings = c("NA", ""))
cleanTrain <- training[!colSums(is.na(training)) >= 19216]
cleanTrain <- cleanTrain[,8:60]
crossVal <- createDataPartition(y = cleanTrain$classe, p = 0.60, list = FALSE)
train <- cleanTrain[crossVal,]
val <- cleanTrain[-crossVal,]
modFit <- randomForest(classe ~ ., data = train)
modFit
pred <- predict(modFit, val)
confusionMatrix(pred, val$classe)
